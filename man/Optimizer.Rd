% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/optimizer.R
\name{Optimizer}
\alias{Optimizer}
\title{Optimizer class}
\description{
Optimizer class

Optimizer class
}
\details{
This class defines the optimization technique.
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{id}}{(`character(1)` The id of the objective.}

\item{\code{print_trace}}{(`logical(1)` Indicator whether to print the status of `$optimize()`.}
}
\if{html}{\out{</div>}}
}
\section{Active bindings}{
\if{html}{\out{<div class="r6-active-bindings">}}
\describe{
\item{\code{lr}}{(`numeric(1`) Step size of the algorithm.}

\item{\code{archive}}{(`data.table()`) Archive of all calls to `$evalStore`.}

\item{\code{objective}}{(`Objective`) The objective function.}

\item{\code{x}}{(`numeric()`) The numerical input vector used as starting point by `$optimize()`.}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-new}{\code{Optimizer$new()}}
\item \href{#method-prepareUpdateForArchive}{\code{Optimizer$prepareUpdateForArchive()}}
\item \href{#method-updateArchive}{\code{Optimizer$updateArchive()}}
\item \href{#method-setX}{\code{Optimizer$setX()}}
\item \href{#method-clone}{\code{Optimizer$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-new"></a>}}
\if{latex}{\out{\hypertarget{method-new}{}}}
\subsection{Method \code{new()}}{
Creates a new instance of this [R6][R6::R6Class] class.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Optimizer$new(objective, x_start, id = NULL, print_trace = TRUE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{objective}}{(`Objective`) The objective to optimize.}

\item{\code{x_start}}{(`numeric()`) Start value of the optimization. Note, after
the first call of `$optimize()` the last value is used to continue
optimization. Get this value with `$x`.}

\item{\code{id}}{(`character(1)`) Id of the object.}

\item{\code{print_trace}}{(`logical(1)`) Indicator whether to print the status of `$optimize()`.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-prepareUpdateForArchive"></a>}}
\if{latex}{\out{\hypertarget{method-prepareUpdateForArchive}{}}}
\subsection{Method \code{prepareUpdateForArchive()}}{
Prepare updates for adding them to the archive.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Optimizer$prepareUpdateForArchive(
  x_out,
  x_in,
  update,
  fval_out,
  fval_in,
  lr,
  step_size,
  objective,
  step,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{x_out}}{(`numeric()`) The new proposed point by the optimizer.}

\item{\code{x_in}}{(`numeric()`) The old input value which is updated to `x_out`.}

\item{\code{update}}{(`numeric()`) The update from `x_in` to `x_out`.}

\item{\code{fval_out}}{(`numeric(1)`) The objective value `objetive$eval(x_out)`.}

\item{\code{fval_in}}{(`numeric(1)`) The objective value `objetive$eval(x_in)`.}

\item{\code{lr}}{(`numeric(1)`) The learning rate used to multiply `update` with.}

\item{\code{step_size}}{(`numeric(1)`) The step_size used to multiply `lr * update` with.}

\item{\code{objective}}{(`Objective`) The objective used by `$optimize()`.}

\item{\code{step}}{(`integer(1)`) The step or iteration.}

\item{\code{...}}{Additional objects added to the archive (e.g. `momentum`).}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
`data.table()` of the input arguments.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-updateArchive"></a>}}
\if{latex}{\out{\hypertarget{method-updateArchive}{}}}
\subsection{Method \code{updateArchive()}}{
Add points to the archive.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Optimizer$updateArchive(ain)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{ain}}{`data.table()` with names "x_out", "x_in", "update", "fval_out",
"fval_in", "lr", "objective", and "step".}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-setX"></a>}}
\if{latex}{\out{\hypertarget{method-setX}{}}}
\subsection{Method \code{setX()}}{
Set the current input vector used as start point of `$optimize()`.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Optimizer$setX(x)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{x}}{(`numeric()`) Input vector.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-clone"></a>}}
\if{latex}{\out{\hypertarget{method-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Optimizer$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
