% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/VisualizerSurfaceModel.R
\name{VisualizerSurfaceModel}
\alias{VisualizerSurfaceModel}
\title{Visualize Model as Interactive Surface}
\description{
This class is used to create interactive 3D surface visualizations of learners and tasks
for 2D input data using plotly.
}
\section{Super classes}{
\code{\link[vistool:Visualizer]{vistool::Visualizer}} -> \code{\link[vistool:VisualizerSurface]{vistool::VisualizerSurface}} -> \code{VisualizerSurfaceModel}
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{task}}{(`mlr3::Task`)\cr
Task used to train the model.}

\item{\code{learner}}{(`mlr3::Learner`)\cr
Learner used to train the model.}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-VisualizerSurfaceModel-new}{\code{VisualizerSurfaceModel$new()}}
\item \href{#method-VisualizerSurfaceModel-add_training_data}{\code{VisualizerSurfaceModel$add_training_data()}}
\item \href{#method-VisualizerSurfaceModel-add_boundary}{\code{VisualizerSurfaceModel$add_boundary()}}
\item \href{#method-VisualizerSurfaceModel-clone}{\code{VisualizerSurfaceModel$clone()}}
}
}
\if{html}{\out{
<details><summary>Inherited methods</summary>
<ul>
<li><span class="pkg-link" data-pkg="vistool" data-topic="Visualizer" data-id="save"><a href='../../vistool/html/Visualizer.html#method-Visualizer-save'><code>vistool::Visualizer$save()</code></a></span></li>
<li><span class="pkg-link" data-pkg="vistool" data-topic="VisualizerSurface" data-id="add_contours"><a href='../../vistool/html/VisualizerSurface.html#method-VisualizerSurface-add_contours'><code>vistool::VisualizerSurface$add_contours()</code></a></span></li>
<li><span class="pkg-link" data-pkg="vistool" data-topic="VisualizerSurface" data-id="init_layer_contour"><a href='../../vistool/html/VisualizerSurface.html#method-VisualizerSurface-init_layer_contour'><code>vistool::VisualizerSurface$init_layer_contour()</code></a></span></li>
<li><span class="pkg-link" data-pkg="vistool" data-topic="VisualizerSurface" data-id="init_layer_surface"><a href='../../vistool/html/VisualizerSurface.html#method-VisualizerSurface-init_layer_surface'><code>vistool::VisualizerSurface$init_layer_surface()</code></a></span></li>
<li><span class="pkg-link" data-pkg="vistool" data-topic="VisualizerSurface" data-id="plot"><a href='../../vistool/html/VisualizerSurface.html#method-VisualizerSurface-plot'><code>vistool::VisualizerSurface$plot()</code></a></span></li>
<li><span class="pkg-link" data-pkg="vistool" data-topic="VisualizerSurface" data-id="set_layout"><a href='../../vistool/html/VisualizerSurface.html#method-VisualizerSurface-set_layout'><code>vistool::VisualizerSurface$set_layout()</code></a></span></li>
<li><span class="pkg-link" data-pkg="vistool" data-topic="VisualizerSurface" data-id="set_scene"><a href='../../vistool/html/VisualizerSurface.html#method-VisualizerSurface-set_scene'><code>vistool::VisualizerSurface$set_scene()</code></a></span></li>
</ul>
</details>
}}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-VisualizerSurfaceModel-new"></a>}}
\if{latex}{\out{\hypertarget{method-VisualizerSurfaceModel-new}{}}}
\subsection{Method \code{new()}}{
Creates a new instance of this [R6][R6::R6Class] class.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{VisualizerSurfaceModel$new(
  task,
  learner,
  x1_limits = NULL,
  x2_limits = NULL,
  padding = 0,
  n_points = 100L,
  opacity = 0.8,
  colorscale = list(c(0, "#440154"), c(0.25, "#3b528b"), c(0.5, "#21908c"), c(0.75,
    "#5dc863"), c(1, "#fde725")),
  show_title = TRUE
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{task}}{([mlr3::Task])\cr
The task to train the model on.}

\item{\code{learner}}{(`mlr3::Learner`)\cr
The learner to train the model with.}

\item{\code{x1_limits}}{(`numeric(2)`)\cr
The x1 limits.}

\item{\code{x1_limits}}{(`numeric(2)`)\cr
The x1 limits.}

\item{\code{x2_limits}}{(`numeric(2)`)\cr
The x2 limits.}

\item{\code{x2_limits}}{(`numeric(2)`)\cr
The x2 limits.}

\item{\code{padding}}{(`numeric(1)`)\cr
A margin that is added to x1limits and x2limits.
The x1 margin is calculated by `max(x1lmits) - min(x1limits) * padding`.}

\item{\code{padding}}{(`numeric(1)`)\cr
A margin that is added to x1limits and x2limits.
The x1 margin is calculated by `max(x1lmits) - min(x1limits) * padding`.}

\item{\code{n_points}}{(`integer(1)`)\cr
The number of generated point per dimension.
Note that a grid of `npoints^2` values is generated and evaluated by `objective$eval(x)` to plot the surface.}

\item{\code{n_points}}{(`integer(1)`)\cr
The number of generated point per dimension.
Note that a grid of `npoints^2` values is generated and evaluated by `objective$eval(x)` to plot the surface.}

\item{\code{opacity}}{(`numeric(1)`)\cr
Opacity of the layer.}

\item{\code{opacity}}{(`numeric(1)`)\cr
Opacity of the layer.}

\item{\code{colorscale}}{(`list()`)\cr
The coloring of the surface/contour.}

\item{\code{colorscale}}{(`list()`)\cr
The coloring of the surface/contour.}

\item{\code{show_title}}{(`logical(1)`)\cr
Indicator whether to show the title of the plot.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-VisualizerSurfaceModel-add_training_data"></a>}}
\if{latex}{\out{\hypertarget{method-VisualizerSurfaceModel-add_training_data}{}}}
\subsection{Method \code{add_training_data()}}{
Adds the training data to the plot.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{VisualizerSurfaceModel$add_training_data(size = 5, color = "grey", ...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{size}}{(`numeric(1)`)\cr
Size of the points.}

\item{\code{color}}{(`character(1)`)\cr
Color of the points.}

\item{\code{...}}{(`any`)\cr
Further arguments passed to `add_trace(...)`.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-VisualizerSurfaceModel-add_boundary"></a>}}
\if{latex}{\out{\hypertarget{method-VisualizerSurfaceModel-add_boundary}{}}}
\subsection{Method \code{add_boundary()}}{
Adds boundary surface(s) to the plot at specified values.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{VisualizerSurfaceModel$add_boundary(values = NULL, color = NULL, ...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{values}}{(`numeric()`)\cr
Vector of z-values where to draw boundary surfaces. For classification with probability predictions,
defaults to 0.5. For regression or response predictions, defaults to quantiles of predictions.}

\item{\code{color}}{(`character(1)` or `list()`)\cr
Color specification for boundary surfaces. Default uses a neutral colorscale.}

\item{\code{...}}{(`any`)\cr
Further arguments passed to `add_trace(...)` or `add_surface(...)`.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-VisualizerSurfaceModel-clone"></a>}}
\if{latex}{\out{\hypertarget{method-VisualizerSurfaceModel-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{VisualizerSurfaceModel$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
