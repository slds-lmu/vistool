% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Visualizer2DModel.R
\name{Visualizer2DModel}
\alias{Visualizer2DModel}
\title{Visualize Model}
\description{
This class is used to create 2D visualizations of learners and tasks.
}
\section{Super classes}{
\code{\link[vistool:Visualizer]{vistool::Visualizer}} -> \code{\link[vistool:Visualizer2D]{vistool::Visualizer2D}} -> \code{Visualizer2DModel}
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{task}}{(`mlr3::Task`)\cr
Task used to train the model.}

\item{\code{learner}}{(`mlr3::Learner`)\cr
Learner used to train the model.}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-Visualizer2DModel-new}{\code{Visualizer2DModel$new()}}
\item \href{#method-Visualizer2DModel-add_training_data}{\code{Visualizer2DModel$add_training_data()}}
\item \href{#method-Visualizer2DModel-add_boundary}{\code{Visualizer2DModel$add_boundary()}}
\item \href{#method-Visualizer2DModel-plot}{\code{Visualizer2DModel$plot()}}
\item \href{#method-Visualizer2DModel-clone}{\code{Visualizer2DModel$clone()}}
}
}
\if{html}{\out{
<details open><summary>Inherited methods</summary>
<ul>
<li><span class="pkg-link" data-pkg="vistool" data-topic="Visualizer" data-id="add_points"><a href='../../vistool/html/Visualizer.html#method-Visualizer-add_points'><code>vistool::Visualizer$add_points()</code></a></span></li>
<li><span class="pkg-link" data-pkg="vistool" data-topic="Visualizer" data-id="initialize_defaults"><a href='../../vistool/html/Visualizer.html#method-Visualizer-initialize_defaults'><code>vistool::Visualizer$initialize_defaults()</code></a></span></li>
<li><span class="pkg-link" data-pkg="vistool" data-topic="Visualizer" data-id="save"><a href='../../vistool/html/Visualizer.html#method-Visualizer-save'><code>vistool::Visualizer$save()</code></a></span></li>
</ul>
</details>
}}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Visualizer2DModel-new"></a>}}
\if{latex}{\out{\hypertarget{method-Visualizer2DModel-new}{}}}
\subsection{Method \code{new()}}{
Creates a new instance of this [R6][R6::R6Class] class.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Visualizer2DModel$new(
  task,
  learner,
  x1_limits = NULL,
  x2_limits = NULL,
  padding = 0,
  n_points = 100L
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{task}}{([mlr3::Task])\cr
The task to train the model on.}

\item{\code{learner}}{(`mlr3::Learner`)\cr
The learner to train the model with.}

\item{\code{x1_limits}}{(`numeric(2)`)\cr
The x1 limits.}

\item{\code{x1_limits}}{(`numeric(2)`)\cr
The x1 limits.}

\item{\code{x2_limits}}{(`numeric(2)`)\cr
The x2 limits.}

\item{\code{x2_limits}}{(`numeric(2)`)\cr
The x2 limits.}

\item{\code{padding}}{(`numeric(1)`)\cr
A margin that is added to x1limits and x2limits.
The x1 margin is calculated by `max(x1lmits) - min(x1limits) * padding`.}

\item{\code{padding}}{(`numeric(1)`)\cr
A margin that is added to x1limits and x2limits.
The x1 margin is calculated by `max(x1lmits) - min(x1limits) * padding`.}

\item{\code{n_points}}{(`integer(1)`)\cr
The number of generated point per dimension.
Note that a grid of `npoints^2` values is generated and evaluated by `objective$eval(x)` to plot the surface.}

\item{\code{n_points}}{(`integer(1)`)\cr
The number of generated point per dimension.
Note that a grid of `npoints^2` values is generated and evaluated by `objective$eval(x)` to plot the surface.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Visualizer2DModel-add_training_data"></a>}}
\if{latex}{\out{\hypertarget{method-Visualizer2DModel-add_training_data}{}}}
\subsection{Method \code{add_training_data()}}{
Adds the training data to the plot.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Visualizer2DModel$add_training_data(
  color = "auto",
  size = 2,
  shape = 19,
  alpha = 1,
  show_labels = FALSE,
  label_size = NULL
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{color}}{(`character(1)`)\cr
Color of the points. Use "auto" for automatic color assignment. Default is "auto".}

\item{\code{size}}{(`numeric(1)`)\cr
Size of the points. Default is 2.}

\item{\code{shape}}{(`integer(1)`)\cr
Shape of the points. Default is 19.}

\item{\code{alpha}}{(`numeric(1)`)\cr
Alpha transparency of the points. Default is 1.}

\item{\code{show_labels}}{(`logical(1)`)\cr
Whether to show data point labels. Default is FALSE.}

\item{\code{label_size}}{(`numeric(1)`)\cr
Size of data point labels. If NULL, defaults to smaller text.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Visualizer2DModel-add_boundary"></a>}}
\if{latex}{\out{\hypertarget{method-Visualizer2DModel-add_boundary}{}}}
\subsection{Method \code{add_boundary()}}{
Adds boundary line(s) to the plot at specified values.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Visualizer2DModel$add_boundary(
  values = NULL,
  color = "black",
  line_width = 1.5,
  line_type = "solid",
  alpha = 0.8
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{values}}{(`numeric()`)\cr
Vector of values where to draw boundary contours. For classification with probability predictions,
defaults to 0.5. For regression or response predictions, defaults to the median of predictions.}

\item{\code{color}}{(`character(1)`)\cr
Color of the boundary lines. Default is "black".}

\item{\code{line_width}}{(`numeric(1)`)\cr
Width of boundary lines. Default is 1.5.}

\item{\code{line_type}}{(`character(1)`)\cr
Type of boundary lines. One of "solid", "dashed", "dotted". Default is "solid".}

\item{\code{alpha}}{(`numeric(1)`)\cr
Transparency of boundary lines. Default is 0.8.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Visualizer2DModel-plot"></a>}}
\if{latex}{\out{\hypertarget{method-Visualizer2DModel-plot}{}}}
\subsection{Method \code{plot()}}{
Create and return the ggplot2 plot with model-specific features.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Visualizer2DModel$plot(
  text_size = 11,
  title_size = NULL,
  theme = "minimal",
  background = "white",
  color_palette = "viridis",
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{text_size}}{(`numeric(1)`)\cr
Base text size for plot elements. Default is 11.}

\item{\code{title_size}}{(`numeric(1)`)\cr
Title text size. If NULL, defaults to text_size + 2.}

\item{\code{theme}}{(`character(1)`)\cr
ggplot2 theme to use. One of "minimal", "bw", "classic", "gray", "light", "dark", "void". Default is "minimal".}

\item{\code{background}}{(`character(1)`)\cr
Background color for the plot. Default is "white".}

\item{\code{color_palette}}{(`character(1)`)\cr
Color palette for the fill scale. One of "viridis", "plasma", "grayscale". Default is "viridis".}

\item{\code{...}}{Additional arguments passed to the parent plot method.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A ggplot2 object.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Visualizer2DModel-clone"></a>}}
\if{latex}{\out{\hypertarget{method-Visualizer2DModel-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Visualizer2DModel$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
