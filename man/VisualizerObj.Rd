% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/VisualizerObj.R
\name{VisualizerObj}
\alias{VisualizerObj}
\title{Visualize Objective (Unified 1D/2D)}
\value{
Returns self invisibly.
}
\description{
This class provides a unified interface for visualizing objective functions
and optimization traces on both 1D and 2D objectives. It automatically detects 
the dimensionality and creates appropriate visualizations using ggplot2.
}
\section{Super class}{
\code{\link[vistool:Visualizer]{vistool::Visualizer}} -> \code{VisualizerObj}
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{objective}}{(`Objective`)\cr
The objective function.}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-VisualizerObj-new}{\code{VisualizerObj$new()}}
\item \href{#method-VisualizerObj-add_optimization_trace}{\code{VisualizerObj$add_optimization_trace()}}
\item \href{#method-VisualizerObj-plot}{\code{VisualizerObj$plot()}}
\item \href{#method-VisualizerObj-clone}{\code{VisualizerObj$clone()}}
}
}
\if{html}{\out{
<details open><summary>Inherited methods</summary>
<ul>
<li><span class="pkg-link" data-pkg="vistool" data-topic="Visualizer" data-id="add_points"><a href='../../vistool/html/Visualizer.html#method-Visualizer-add_points'><code>vistool::Visualizer$add_points()</code></a></span></li>
<li><span class="pkg-link" data-pkg="vistool" data-topic="Visualizer" data-id="initialize_defaults"><a href='../../vistool/html/Visualizer.html#method-Visualizer-initialize_defaults'><code>vistool::Visualizer$initialize_defaults()</code></a></span></li>
<li><span class="pkg-link" data-pkg="vistool" data-topic="Visualizer" data-id="resolve_layer_colors"><a href='../../vistool/html/Visualizer.html#method-Visualizer-resolve_layer_colors'><code>vistool::Visualizer$resolve_layer_colors()</code></a></span></li>
<li><span class="pkg-link" data-pkg="vistool" data-topic="Visualizer" data-id="save"><a href='../../vistool/html/Visualizer.html#method-Visualizer-save'><code>vistool::Visualizer$save()</code></a></span></li>
</ul>
</details>
}}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-VisualizerObj-new"></a>}}
\if{latex}{\out{\hypertarget{method-VisualizerObj-new}{}}}
\subsection{Method \code{new()}}{
Creates a new instance of this [R6][R6::R6Class] class.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{VisualizerObj$new(
  objective,
  x1_limits = NULL,
  x2_limits = NULL,
  padding = 0,
  n_points = 100L,
  type = NULL
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{objective}}{(`Objective`)\cr
The objective to optimize.}

\item{\code{x1_limits}}{(`numeric(2)`)\cr
Limits for the first dimension. For 1D objectives, this controls the x-axis range.
If NULL, will be determined from objective bounds.}

\item{\code{x2_limits}}{(`numeric(2)`)\cr
Limits for the second dimension (2D objectives only). Ignored for 1D objectives.
If NULL, will be determined from objective bounds.}

\item{\code{padding}}{(`numeric(1)`)\cr
A margin that is added to x1limits and x2limits.
The x1 margin is calculated by `max(x1lmits) - min(x1limits) * padding`.}

\item{\code{padding}}{(`numeric(1)`)\cr
A margin that is added to x1limits and x2limits.
The x1 margin is calculated by `max(x1lmits) - min(x1limits) * padding`.}

\item{\code{n_points}}{(`integer(1)`)\cr
The number of generated point per dimension.
Note that a grid of `npoints^2` values is generated and evaluated by `objective$eval(x)` to plot the surface.}

\item{\code{n_points}}{(`integer(1)`)\cr
The number of generated point per dimension.
Note that a grid of `npoints^2` values is generated and evaluated by `objective$eval(x)` to plot the surface.}

\item{\code{type}}{(`character(1)`)\cr
Optional visualization type ("1d" or "2d") to override automatic dimension detection.
Useful when objective dimensions are unknown but visualization type is explicitly specified.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-VisualizerObj-add_optimization_trace"></a>}}
\if{latex}{\out{\hypertarget{method-VisualizerObj-add_optimization_trace}{}}}
\subsection{Method \code{add_optimization_trace()}}{
Add optimization trace to the plot.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{VisualizerObj$add_optimization_trace(
  optimizer,
  line_color = NULL,
  line_width = 1.2,
  line_type = "solid",
  npoints = NULL,
  npmax = NULL,
  name = NULL,
  add_marker_at = 1,
  marker_size = 3,
  marker_shape = 16,
  marker_color = NULL,
  show_start_end = TRUE,
  alpha = 0.8
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{optimizer}}{(`Optimizer`)\cr
The optimizer to add to the plot. Must have been run and contain archive data.}

\item{\code{line_color}}{(`character(1)`)\cr
Color of the optimization trace line. If NULL, uses automatic color.}

\item{\code{line_width}}{(`numeric(1)`)\cr
Width of the trace line. Default is 1.2.}

\item{\code{line_type}}{(`character(1)`)\cr
Type of the trace line. One of "solid", "dashed", "dotted". Default is "solid".}

\item{\code{npoints}}{(`integer(1)`)\cr
Number of points to show from the trace. If NULL, shows all points.}

\item{\code{npmax}}{(`integer(1)`)\cr
Maximum number of points to show. If NULL, no limit.}

\item{\code{name}}{(`character(1)`)\cr
Name for the trace (used in legends). If NULL, uses optimizer ID.}

\item{\code{add_marker_at}}{(`integer()`)\cr
Iteration numbers where to add markers. For 2D plots only.}

\item{\code{marker_size}}{(`numeric(1)`)\cr
Size of markers. Default is 3.}

\item{\code{marker_shape}}{(`numeric(1)` or `character(1)`)\cr
Shape of markers. Default is 16 (filled circle).}

\item{\code{marker_color}}{(`character(1)`)\cr
Color of markers. If NULL, uses line color.}

\item{\code{show_start_end}}{(`logical(1)`)\cr
Whether to highlight start and end points. Default is TRUE for 2D plots.}

\item{\code{alpha}}{(`numeric(1)`)\cr
Alpha transparency. Default is 0.8.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-VisualizerObj-plot"></a>}}
\if{latex}{\out{\hypertarget{method-VisualizerObj-plot}{}}}
\subsection{Method \code{plot()}}{
Create and return the plot with objective-specific features.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{VisualizerObj$plot(
  text_size = 11,
  title_size = NULL,
  theme = "minimal",
  background = "white",
  color_palette = "viridis",
  flatten = FALSE,
  layout = NULL,
  scene = NULL,
  plot_title = NULL,
  plot_subtitle = NULL,
  show_title = TRUE,
  x_lab = NULL,
  y_lab = NULL,
  z_lab = NULL,
  x_limits = NULL,
  y_limits = NULL,
  z_limits = NULL,
  show_grid = TRUE,
  grid_color = "gray90",
  show_legend = TRUE,
  legend_position = "right",
  legend_title = NULL
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{text_size}}{(`numeric(1)`)\cr
Base text size for plot elements. Default is 11.}

\item{\code{title_size}}{(`numeric(1)`)\cr
Title text size. If NULL, defaults to text_size + 2.}

\item{\code{theme}}{(`character(1)`)\cr
ggplot2 theme to use. One of "minimal", "bw", "classic", "gray", "light", "dark", "void". Default is "minimal".}

\item{\code{background}}{(`character(1)`)\cr
Background color. Default is "white".}

\item{\code{color_palette}}{(`character(1)`)\cr
Color palette for the fill scale. One of "viridis", "plasma", "grayscale". Default is "viridis".}

\item{\code{flatten}}{(`logical(1)`)\cr
For surface visualizers: if TRUE, display as 2D contour plot. Ignored for objective visualizers. Default is FALSE.}

\item{\code{layout}}{(`list()`)\cr
For surface visualizers: layout options. Ignored for objective visualizers. Default is NULL.}

\item{\code{scene}}{(`list()`)\cr
For surface visualizers: scene options for 3D plots. Ignored for objective visualizers. Default is NULL.}

\item{\code{plot_title}}{(`character(1)`)\cr
Custom plot title. If NULL, uses default title.}

\item{\code{plot_subtitle}}{(`character(1)`)\cr
Plot subtitle. Default is NULL.}

\item{\code{show_title}}{(`logical(1)`)\cr
Whether to show the plot title. Default is TRUE.}

\item{\code{x_lab}}{(`character(1)`)\cr
Custom x-axis label. If NULL, uses feature name.}

\item{\code{y_lab}}{(`character(1)`)\cr
Custom y-axis label. If NULL, uses target name.}

\item{\code{z_lab}}{(`character(1)`)\cr
Z-axis label (for surface plots). If NULL, uses the visualizer's default label. Default is NULL.}

\item{\code{x_limits}}{(`numeric(2)`)\cr
X-axis limits as c(min, max). If NULL, uses default limits.}

\item{\code{y_limits}}{(`numeric(2)`)\cr
Y-axis limits as c(min, max). If NULL, uses default limits.}

\item{\code{z_limits}}{(`numeric(2)`)\cr
Z-axis limits as c(min, max) (for surface plots). If NULL, uses automatic limits. Default is NULL.}

\item{\code{show_grid}}{(`logical(1)`)\cr
Whether to show grid lines. Default is TRUE.}

\item{\code{grid_color}}{(`character(1)`)\cr
Grid line color. Default is "gray90".}

\item{\code{show_legend}}{(`logical(1)`)\cr
Whether to show the legend. Default is TRUE.}

\item{\code{legend_position}}{(`character(1)`)\cr
Legend position: "top", "right", "bottom", "left", "none". Default is "right".}

\item{\code{legend_title}}{(`character(1)`)\cr
Custom legend title. If NULL, uses default.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A ggplot2 object.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-VisualizerObj-clone"></a>}}
\if{latex}{\out{\hypertarget{method-VisualizerObj-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{VisualizerObj$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
